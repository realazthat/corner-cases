{"name":"Corner-cases","tagline":"A library for reasoning about a cube, the faces, corners, and edges of a cube.","body":"corner-cases/cubelib\r\n---\r\n\r\ncubelib is a C header-only library for reasoning about a cube's corners, directions/faces, and edges. It is useful for\r\ndealing with data structures based on cubes, such as octrees.\r\n\r\n[![Build Status](https://travis-ci.org/realazthat/corner-cases.svg?branch=master)](https://travis-ci.org/realazthat/corner-cases)\r\n\r\n\r\nMotivation\r\n----\r\n\r\nUsing cubelib allows one to avoid cryptic bit-twiddling, and instead use logical and\r\nself-documenting functions provided by this library to reason about and manipulate corners of the cube.\r\n\r\nExample functionality:\r\n\r\n* `corner0 = get_corner_by_int3(-1,-1,1)` - get the lower x,y, and upper z corner\r\n* `direction = get_direction_by_int3(0,1,0)` - get the direction of +y\r\n* `corner1 = move_corner(corner0, direction)` - move the corner in the +y direction, return the resulting corner\r\n* `corner2 = opposite_corner(corner1)` - calculate the opposite corner\r\n\r\n\r\n\r\n\r\n\r\nLicense\r\n----\r\n\r\nReleased under the [MIT License](https://opensource.org/licenses/MIT).\r\n\r\n\r\n\r\n\r\nBuilding\r\n----\r\n\r\nUse of the library in C does not require anything to be built.\r\n\r\nThe library can however be built for use in opencl, in which case certain constant-arrays need to be\r\npre-calculated. Therefore, a binary can be built, which will generate the headers with the constants.\r\n\r\nFurthermore, there are unittests that can be built.\r\n\r\nThe unittests require googletest (gtest) to be installed on the system.\r\n\r\nTo build (on linux):\r\n\r\n```\r\nmkdir build\r\ncd build\r\ncmake ..\r\n#on msys2/mingw-w64 you would run this instead\r\ncmake -G\"MSYS Makefiles\" ..\r\n\r\n#on some systems, you must additionally link pthreads after gtest, so let's store pthread in GTEST_LIB\r\ncmake . \"-DGTEST_LIB=gtest;pthread\"\r\n\r\n#now build\r\n#optionally make the program that generates the opencl consts header, unnecessary\r\nmake cubelib-clgen-consts\r\n#optionally make the generated opencl consts header\r\nmake cubelib.clgen.h\r\n#make the unittests\r\nmake unittests\r\n#or make all\r\nmake all\r\n```\r\n\r\nThe program `cubelib-clgen-consts` will be built, which can generate the required header `cubelib.clgen.h`, which will itself be generated as well\r\nin the build directory.\r\n\r\nTo run the unittests:\r\n\r\n```\r\n#in the build directory\r\n./unittests\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}